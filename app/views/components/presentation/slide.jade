element(name="ui-slide", \attributes="background backdrop build center vcenter")
    template
        include ../../../assets/stylus/components/presentation/slide.styl

        style(polymer-scope="global").
            .ui-slide-item {
                -ms-transition: opacity 0.6s ease-in-out;
                -moz-transition: opacity 0.6s ease-in-out;
                -webkit-transition: opacity 0.6s ease-in-out;
                transition: opacity 0.6s ease-in-out;

            }
            .ui-slide-item-pending {
                opacity: 0;
            }
            .ui-slide-item-done {
                opacity: 1;
            }
            .ui-slide-item-done.ui-slide-item-fade {
                opacity: .3;
            }


        .ui-slide(state="{{state}}", loaded="{{loaded}}", background="{{background}}",  build="{{build}}", center="{{center}}", vcenter="{{vcenter}}")
            content

    script.
        Polymer.register(this, {
            backdrop: true,
            background: true,
            build: true,
            center: false,
            loaded: false,
            items: [],
            state: '',
            vcenter: false,
            /**
             * polymer init
             */
            ready: function(){
                if(this.build){
                    this.buildItems();
                }
            },

            /**
             * build items
             */
            buildItems: function(){
                var slideItems = this.querySelectorAll('ui-slide-items'),
                    scope = this;

                slideItems.forEach(function(i){
                    var selector = i.getAttribute('selector'),
                        fx = i.getAttribute('fx');

                    scope.items = selector ? i.querySelectorAll(selector) : i.childNodes;

                    scope.items.forEach(function(j){
                        j.classList.add('ui-slide-item','ui-slide-item-pending');

                        if(fx){
                            j.classList.add('ui-slide-item-'+fx);
                        }
                    });
                });
            },

            /**
             * [ description]
             * @return [Boolean]
             */
            nextItem: function(){
                if(!this.items.length){
                    return false;
                }

                return Array.prototype.some.call(this.items, function(i){
                    if(i.classList.contains('ui-slide-item-pending')){
                        i.classList.remove('ui-slide-item-pending');
                        return true;
                    }
                    if(!i.classList.contains('ui-slide-item-done')){
                        console.log(i);
                        i.classList.add('ui-slide-item-done');
                    }
                });
            }
        });